(function(r,e){typeof exports=="object"&&typeof module!="undefined"?e(exports):typeof define=="function"&&define.amd?define(["exports"],e):(r=typeof globalThis!="undefined"?globalThis:r||self,e(r.BrowserCache={}))})(this,function(r){"use strict";var m=Object.defineProperty,y=Object.defineProperties;var b=Object.getOwnPropertyDescriptors;var v=Object.getOwnPropertySymbols;var D=Object.prototype.hasOwnProperty,j=Object.prototype.propertyIsEnumerable;var l=(r,e,i)=>e in r?m(r,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):r[e]=i,n=(r,e)=>{for(var i in e||(e={}))D.call(e,i)&&l(r,i,e[i]);if(v)for(var i of v(e))j.call(e,i)&&l(r,i,e[i]);return r},p=(r,e)=>y(r,b(e));var c=(r,e,i)=>(l(r,typeof e!="symbol"?e+"":e,i),i);var e={driver:"memory"};class i{}class f extends i{}c(f,"driver","memory");const a={};for(const t of[f])a[t.driver]=t;const d={},w=t=>{if(Object.getPrototypeOf(t)===i)if(t.driver&&typeof t.driver=="string")d[t.driver]=t;else throw new Error("please input the driver name.")},h=()=>{let t=["memory"];return window.localStorage&&a.localStorage&&t.push("localStorage"),window.sessionStorage&&a.sessionStorage&&t.push("sessionStorage"),window.document.cookie&&a.cookie&&t.push("cookie"),window.indexedDB&&a.indexedDB&&t.push("indexedDB"),t=t.concat(Object.keys(d)),t},S=t=>a[t]||d[t];class g{constructor(s,o){c(this,"opts");c(this,"__init",!1);c(this,"driver");c(this,"store");const u=h();if(!s&&!o)o=n({},e);else if(s)if(u.includes(s))Object.prototype.toString.call(o)==="[object Object]"?o=n(p(n({},e),{driver:s}),o):o=p(n({},e),{driver:s});else if(Object.prototype.toString.call(s)==="[object Object]"&&u.includes(s.driver))o=n(n({},e),s);else throw new Error("please input the correct driver param as the first param or in the opts params.");else throw new Error("please input the driver as first param.");if(o&&o.driver)this.opts=o,this.initDriver(),this.__init=!0;else throw new Error("please input the driver as first param.")}initDriver(){const s=h();if(!this.store&&this.opts&&this.opts.driver&&s.includes(this.opts.driver)){const o=S(this.opts.driver);this.store=new o(this.opts),this.driver=this.opts.driver}}setDriver(s){this.opts.driver=s,this.initDriver()}get(s){}}r.BaseStore=i,r.BrowserCache=g,r.registerStore=w,Object.defineProperties(r,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
